{"version":3,"sources":["contexts/UserContext.js","contexts/ScreenWidthContext.js","components/CountdownClock/CountdownClock.js","components/Home/Home.js","components/SearchBar/SearchBar.js","contexts/SnackbarContext.js","components/NavSideBar/NavSideBar.js","components/Login/Login.js","utils/numbersUtils.js","components/UserActions/UserActions.js","components/UserRatingsChart/UserRatingsChart.js","components/Profile/Profile.js","components/Snackbar/Snackbar.js","components/BookResults/BookResults.js","components/AuthorWorks/AuthorWorks.js","utils/userBookStatusConstants.js","contexts/UserBookContext.js","components/UserBookExtrasDialog/UserBookExtrasDialog.js","components/UserBookStatus/UserBookStatus.js","components/UserBookRating/UserBookRating.js","components/BookReviews/BookReviews.js","components/Book/Book.js","components/Author/Author.js","components/BooksTile/BooksTile.js","components/MyBooks/MyBooks.js","components/MyBooksDetails/MyBooksDetails.js","components/MyReviews/MyReviews.js","components/Friends/Friends.js","components/Communities/Communities.js","components/NotFound/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","ScreenWidthContext","CountdownClock","props","countDownDate","Date","targetDate","getTime","useState","countDownValue","setCountDownValue","interval","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","className","Home","useContext","user","useNavigate","width","SearchBar","setClassName","placeholder","setPlaceHolder","inputValue","setInputValue","submitSearch","event","preventDefault","searchSubmit","Paper","component","sx","p","display","alignItems","InputBase","ml","flex","inputProps","onSubmit","value","onChange","target","displayLoadingSpinner","CircularProgress","length","onClick","Divider","height","m","orientation","IconButton","type","SnackbarContext","drawerWidth","ResponsiveDrawer","window","React","mobileOpen","setMobileOpen","profilePicUrl","profile","profileName","name","profileNames","split","setDisplayLoadingSpinner","nameCaps","pop","raiseSnackbarMessage","navigate","onSubmitSearch","searchObj","a","query","axios","method","url","encodeURI","response","status","data","numFound","state","handleDrawerToggle","drawer","Toolbar","List","to","ListItem","button","ListItemIcon","ListItemText","primary","container","undefined","document","body","Box","CssBaseline","AppBar","position","sm","color","edge","mr","title","src","flexShrink","Drawer","variant","open","onClose","ModalProps","keepMounted","xs","boxSizing","flexGrow","Login","setUser","clientId","process","buttonText","onSuccess","res","tokenId","then","alert","error","userObj","token","localStorage","setItem","JSON","stringify","onFailure","console","log","cookiePolicy","abbreviateNumber","newValue","round","suffixNum","shortValue","precision","parseFloat","pow","toPrecision","replace","toFixed","UserActions","actions","paginationCount","ceil","paginationIndex","setPaginationIndex","handleBookNavigation","id","currentTarget","getAttribute","slice","map","action","idx","cover","bookid","bookId","moment","timestamp","format","bookName","rating","Rating","readOnly","reviewContent","Pagination","count","page","UserRatingsChart","barChart","setBarChart","labels","values","key","push","chartData","datasets","backgroundColor","Dialog","setOpenReviewChart","DialogTitle","Switch","checked","options","scales","x","grid","y","plugins","legend","Profile","setMyRating","reviews","setReviews","userActions","setUserActions","openReviewChart","useEffect","headers","message","averageRating","ratingMap","ratingCount","Button","Alert","forwardRef","ref","elevation","SnackBar","snackbarOpen","setOpen","toggleSnackbar","details","snackbarObj","handleClose","reason","Stack","spacing","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","current","ALT_IMAGE_PATH","BookResults","useLocation","docs","setData","num_found","handlePaginationChange","search","searchResultSelected","noResultsJSX","displayResultsJSX","obj","coverid","cover_i","itemID","Card","maxWidth","CardMedia","alt","image","CardContent","Typography","gutterBottom","first_publish_year","AuthorWorks","authorId","limit","works","setWorks","navigationHandler","entries","covers","USER_BOOK_STATUS_CONSTANTS","WANT_TO_READ","CURRENTLY_READING","READ","NONE","USER_BOOK_STATUS_CONSTANTS_LIST","UserBookContext","DialogHeader","styled","theme","padding","children","other","right","top","palette","grey","PaperComponent","handle","cancel","UserBookExtrasDialog","startDate","setStartDate","endDate","setEndDate","setTargetDate","dateError","useRef","currentReviewContent","setReviewContent","prevReviewContent","setCurrentUserReview","setDialogOpen","handleSubmit","extras","userName","prevReview","bookCover","reviewTimeStamp","style","cursor","DialogContent","dividers","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","val1","parse","val2","maxDate","renderInput","params","TextField","minDate","multiline","maxLength","fullWidth","DialogActions","autoFocus","disabled","USER_BOOK_STATUS_LIST","UserBookStatus","setStatus","renderCount","dialogOpen","handleChange","prevVal","statusVal","updateStatus","prev","FormControl","minWidth","InputLabel","Select","labelId","MenuProps","disableScrollLock","val","MenuItem","UserBookRating","setRating","handleRatingUpdate","BookReviews","userId","userReview","filter","_id","review","timeStamp","CHIP_STYLES","background","Book","book","setBook","author","setAuthor","userBook","setUserBook","pathname","bookReviews","setBookReviews","currentUserReview","bookStats","setBookStats","setAverageRating","wantToReadCount","readCount","currentlyReadingCount","authors","authorid","description","Provider","progress","radius","responsive","subject_people","subject_places","index","Chip","Author","photos","birth_date","bio","links","href","wikipedia","BooksTile","books","displayRating","displayStarted","date","displayCompleted","displayTarget","MyBooks","innerWidth","myBooks","setMyBooks","handleNavigation","trim","MyBookDetails","decodeURI","isValidPath","bookSelected","notValidPathJSX","MyReviews","Friends","Communities","NotFound","App","getItem","setWidth","addEventListener","appFlow","path","element","MyBooksDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88862796.chunk.js","sourcesContent":["//A context to distribute User information. \r\n\r\nimport {createContext} from 'react';\r\n\r\nexport const UserContext = createContext(null);","//A context to distribute the scrren's width state. \r\n\r\nimport {createContext} from 'react';\r\n\r\nexport const ScreenWidthContext = createContext(null);","import React, { useState } from 'react';\r\nimport './CountdownClock.css';\r\n\r\nconst CountdownClock = (props) => {\r\n    const countDownDate = new Date(props.targetDate || \"Dec 22, 2021 00:00:00\").getTime();\r\n    let [countDownValue, setCountDownValue] = useState(\"\");\r\n    const interval = setInterval(function() {\r\n        // Get today's date and time\r\n        var now = new Date().getTime();\r\n          \r\n        // Find the distance between now and the count down date\r\n        var distance = countDownDate - now;\r\n          \r\n        // Time calculations for days, hours, minutes and seconds\r\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n          \r\n        setCountDownValue(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\r\n        // If the count down is over, write some text \r\n        if (distance < 0) {\r\n          clearInterval(interval);\r\n          setCountDownValue(\"The latest features are on their way!\");\r\n        }\r\n      }, 1000);\r\n\r\n    return (\r\n        <div className=\"CountdownClock\">\r\n            {countDownValue}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountdownClock;","import React, { useContext } from 'react';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport './Home.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport CountdownClock from '../CountdownClock/CountdownClock';\r\n\r\nconst Home = () => {\r\n    const {user} = useContext(UserContext);\r\n    const navigate = useNavigate();\r\n    const width = useContext(ScreenWidthContext);\r\n  \r\n    return (\r\n       <div className=\"Home\"> \r\n            <div className={`Home-count-down-wrapper ${width < 1200 ? 'mobile1200' : null}`}>\r\n                <p>Home tab feature development is in progress. Keep an eye out</p>\r\n                <CountdownClock targetDate={\"Dec 22, 2021 00:00:00\"} />\r\n            </div>\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport './SearchBar.css';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst SearchBar = (props) => {\r\n    const className = props.setClassName || \"\";\r\n    const placeholder = props.setPlaceHolder || \"Better Reads search...\";\r\n    const [inputValue, setInputValue] = useState(null);\r\n\r\n    /**\r\n     * Function to call the parent's search submit function with the value entered in the search field.\r\n     * @param {*} event \r\n     */\r\n    const submitSearch = (event) => {\r\n        event.preventDefault();\r\n        props.searchSubmit({\r\n            inputValue: inputValue,\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Handler to update the state of the search bar.\r\n     */\r\n    const handleChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n\r\n    /**\r\n     * Handler to clear the input entered in the search field.\r\n     */\r\n    const handleClearSearch = (event) => {\r\n        setInputValue('');\r\n    };\r\n\r\n  return (\r\n      <div className=\"SearchBar\">\r\n          <Paper className={className}\r\n            component=\"form\"\r\n            sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}\r\n            >\r\n            \r\n            <InputBase\r\n                sx={{ ml: 1, flex: 1 }}\r\n                placeholder={placeholder}\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                onSubmit={submitSearch}\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            {\r\n                props.displayLoadingSpinner ?\r\n                    <div className=\"SearchBar-loading-spinner-wrapper\">\r\n                        <CircularProgress /> \r\n                    </div> \r\n                    :\r\n                    <>\r\n                        {\r\n                            inputValue && inputValue.length > 0 ?\r\n                                <ClearIcon className=\"Searchbar-clear\" onClick={handleClearSearch} /> : null\r\n                        }\r\n                        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                        <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\" onClick={submitSearch}>\r\n                        <SearchIcon />\r\n                        </IconButton>\r\n                    </>\r\n                    \r\n            }\r\n\r\n        </Paper>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","//A context to distribute the Snackbar open/hide state. \r\n\r\nimport {createContext} from 'react';\r\n\r\nexport const SnackbarContext = createContext(null);","import React, { useContext, useState } from 'react';\r\nimport './NavSideBar.css';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport BookIcon from '@mui/icons-material/Book';\r\nimport GroupsIcon from '@mui/icons-material/Groups';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\nconst SEARCH_QUERY_PREFIX = \"https://openlibrary.org/search.json?q=\";\r\n\r\nconst ResponsiveDrawer = (props) => {\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const {user} = useContext(UserContext);\r\n  const profilePicUrl = user.profile.profilePicUrl;\r\n  const profileName = (user && user.profile && user.profile.name) ? user.profile.name : '';\r\n  const profileNames = profileName.split(' ');\r\n  const [displayLoadingSpinner, setDisplayLoadingSpinner] = useState(false);\r\n  let nameCaps = profileNames[0][0];\r\n  if(profileNames.length > 1) {\r\n    nameCaps += profileNames.pop()[0]; \r\n  }\r\n  const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n  const navigate = useNavigate();\r\n  const width = useContext(ScreenWidthContext);\r\n\r\n  /**\r\n     * Function to redirect the user to Book results page or raise an error if the search result\r\n     * isn't retrieved.\r\n     */\r\n\r\n   const onSubmitSearch = async (searchObj) => {\r\n      const query = searchObj.inputValue;\r\n      setDisplayLoadingSpinner(true);\r\n      const response = await axios({\r\n          method: \"GET\",\r\n          url: SEARCH_QUERY_PREFIX + encodeURI(query) + '&limit=10'\r\n      });\r\n      setDisplayLoadingSpinner(false);\r\n      if(response.status !== 200 || response.data.numFound === 0) {\r\n        raiseSnackbarMessage('Unable to fetch the Search result. Please try again later or try a different search', 'error');\r\n      }\r\n      else {\r\n          navigate(`bookresults?q=${query}`, {state: response.data});\r\n      }\r\n  };\r\n\r\n  /**\r\n   * Handler to navigate the user to Profile page.\r\n   */\r\n  const handleProfileNavigation = () => {\r\n    navigate(`/profile`);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Toolbar />\r\n      <List>\r\n          <NavLink to=\"/\" className=\"NavSideBar-item\"> \r\n            <ListItem button key=\"Home\" onClick={handleDrawerToggle}> \r\n                <ListItemIcon>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n          </NavLink>\r\n\r\n        <NavLink to=\"/profile\" className=\"NavSideBar-item\" onClick={handleDrawerToggle}>\r\n            <ListItem button key=\"Profile\"> \r\n                <ListItemIcon>\r\n                    <PersonIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Profile\" />\r\n            </ListItem>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/mybooks\" className=\"NavSideBar-item\" onClick={handleDrawerToggle}> \r\n            <ListItem button key=\"My Books\"> \r\n                <ListItemIcon>\r\n                    <BookIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"My Books\" />\r\n            </ListItem>\r\n        </NavLink>\r\n        \r\n\r\n        <NavLink to=\"/friends\" className=\"NavSideBar-item\" onClick={handleDrawerToggle}>\r\n            <ListItem button key=\"Friends\"> \r\n                <ListItemIcon>\r\n                    <GroupIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Friends\" />\r\n            </ListItem>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/communities\" className=\"NavSideBar-item\" onClick={handleDrawerToggle}>\r\n            <ListItem button key=\"Communities\"> \r\n                <ListItemIcon>\r\n                    <GroupsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Communities\" />\r\n            </ListItem>\r\n        </NavLink>\r\n\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }} className=\"NavSideBar\">\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          ml: { sm: `${drawerWidth}px` },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: 'none' } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          \r\n          <div className=\"NavSideBar-user-profile-wrapper\">\r\n\r\n            <div className=\"NavSideBar-Search-wrapper\">\r\n              <SearchBar setPlaceHolder=\"Search Books/Authors\" searchSubmit={onSubmitSearch} displayLoadingSpinner={displayLoadingSpinner} />\r\n            </div>\r\n\r\n            <div className=\"NavSideBar-user-profile-info-wrapper\" title={profileName} onClick={handleProfileNavigation}> \r\n              <div className=\"NavSideBar-user-profile-pic-wrapper\">\r\n                  <img src={profilePicUrl} className=\"NavSideBar-user-profile-pic\" />\r\n              </div>\r\n              <div className={`NavSideBar-user-profile-name-wrapper ${width < 700 ? 'no-display' : null}`}>\r\n                  <p className={`NavSideBar-user-profile-name`}>{nameCaps}</p>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', sm: 'none' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: 'none', sm: 'block' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${drawerWidth}px)` } }}\r\n      >\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useContext } from 'react';\r\nimport './Login.css';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../contexts/UserContext';\r\n\r\nfunction Login() {\r\n    const {user, setUser} = useContext(UserContext);\r\n    const responseGoogle = (res) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: process.env.REACT_APP_SERVER_URL + \"/api/login/googlelogin\",\r\n            data: {tokenId: res.tokenId}\r\n        }).then(response => {\r\n            if(response.status === 400) {\r\n                alert(response.data.error);\r\n            }\r\n            else {\r\n                const userObj = {\r\n                    token: response.data.token,\r\n                    profile: response.data.user\r\n                };\r\n                localStorage.setItem(\"betterreadsuserinfo\", JSON.stringify(userObj));\r\n                setUser(userObj);\r\n            }\r\n        });\r\n    };\r\n\r\n    const responseFailureGoogle = (res) => {\r\n        //alert('Unable to Login via Google OAUTH. Please try again!');\r\n        console.log(res);\r\n    };\r\n\r\n    return(\r\n       <div className=\"Login\">\r\n           <div className=\"Login-wrapper\">\r\n                <div className=\"Login-header\">\r\n                    <div className=\"Login-header-title-wrapper\">\r\n                            <p className=\"Login-header-title\">Better Reads</p>\r\n                    </div>\r\n                        <p className=\"Login-header-caption\">A social network for Bookworms!</p>\r\n                </div>\r\n                <div className=\"Login-types-wrapper\">\r\n                    <div className=\"Login-types-text-wrapper\">\r\n                        <p>{`Discover & read more`}</p>\r\n                    </div>\r\n                    <div className=\"Login-google\">\r\n                        <GoogleLogin\r\n                            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n                            buttonText=\"Continue with Google\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={responseFailureGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n           </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Login;","export const abbreviateNumber = (value) => {\r\n    var newValue = value;\r\n    if (value >= 1000) {\r\n        value = Math.round(value);\r\n        var suffixes = [\"\", \"k\", \"m\", \"b\",\"t\"];\r\n        var suffixNum = Math.floor( (\"\"+value).length/3 );\r\n        var shortValue = '';\r\n        for (var precision = 2; precision >= 1; precision--) {\r\n            shortValue = parseFloat( (suffixNum != 0 ? (value / Math.pow(1000,suffixNum) ) : value).toPrecision(precision));\r\n            var dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g,'');\r\n            if (dotLessShortValue.length <= 2) { break; }\r\n        }\r\n        if (shortValue % 1 != 0)  shortValue = shortValue.toFixed(1);\r\n        newValue = shortValue+suffixes[suffixNum];\r\n    }\r\n    return newValue;\r\n}","import React, { useState, useContext } from 'react';\r\nimport './UserActions.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Rating from '@mui/material/Rating';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\n\r\nconst COVER_PIC_URL_PREFIX = \"https://covers.openlibrary.org/b/id/\";\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/ImgNotAvailable.jpg\";\r\n\r\nconst UserActions = (props) => {\r\n    const actions = props.data;\r\n    const width = useContext(ScreenWidthContext);\r\n    const paginationCount = Math.ceil((actions && actions.length ? actions.length : 0) / 10);\r\n    const [paginationIndex, setPaginationIndex] = useState(1);\r\n    const navigate = useNavigate();\r\n\r\n    /**\r\n     * Handler to navigate to the corresponding Book page. \r\n    */\r\n    const handleBookNavigation = (event) => {\r\n        const id = event.currentTarget.getAttribute(\"bookid\");\r\n        navigate(`/book/${id}`, {state: id});\r\n    };\r\n\r\n    /**\r\n    * Function to handle the change in pagination index.\r\n    */\r\n      const handlePaginationChange = (event, value) => {\r\n        setPaginationIndex(value);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                actions && actions.length ? \r\n                    actions.slice(10 * (paginationIndex - 1), 10 * paginationIndex).map((action, idx) => \r\n                        <div className={`UserActions-action ${width < 1200 ? 'mobile1200' : null}`} key={idx}>\r\n                            <div className=\"UserActions-book-cover-wrapper\">\r\n                                <img src={action.cover ? COVER_PIC_URL_PREFIX + action.cover + \"-M.jpg\" : ALT_IMAGE_PATH} \r\n                                    onClick={handleBookNavigation} bookid={action.bookId}/>\r\n                                <div className=\"UserActions-book-timestamp-wrapper\">\r\n                                    <p>{moment(action.timestamp).format('Do MMM, YY')}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"UserActions-details-wrapper\">\r\n                                <div className=\"UserActions-action-wrapper\">\r\n                                    <p>{action.action}</p>\r\n                                </div>\r\n                                <div className=\"UserActions-book-name-wrapper\">\r\n                                    <span className=\"UserActions-book-name\">{action.bookName}</span>\r\n                                    {action.rating ? <span><Rating value={action.rating} precision={0.5} readOnly/></span> : null}\r\n                                </div>\r\n                                {\r\n                                    action.reviewContent ?\r\n                                        <div className=\"UserActions-book-review-content-wrapper\">\r\n                                            <p>{action.reviewContent}</p>\r\n                                        </div>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    : null\r\n            }\r\n            {\r\n                 actions && actions.length ? \r\n                    <div className=\"UserActions-pagination-wrapper\">\r\n                        <Pagination count={paginationCount} page={paginationIndex} onChange={handlePaginationChange} \r\n                            variant=\"outlined\" color=\"primary\" />  \r\n                    </div> \r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserActions;","import React, { useState } from 'react';\r\nimport './UserRatingsChart.css';\r\nimport { Chart as ChartJS } from 'chart.js/auto';\r\nimport { Chart, Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nconst UserRatingsChart = (props) => {\r\n    const data = props.data;\r\n    const [barChart, setBarChart] = useState(true);\r\n    let labels = [];\r\n    let values = [];\r\n    for(let key in data) {\r\n        labels.push(key);\r\n        values.push(data[key]);\r\n    }\r\n    let chartData = {\r\n        labels: labels,\r\n        datasets: [{\r\n            data: values,\r\n            backgroundColor: [\r\n                '#292826',\r\n                'rgb(54, 162, 235)',\r\n                'rgb(255, 205, 86)',\r\n                'rgb(255, 99, 132)',\r\n                '#AA96DA',\r\n              ]\r\n        }]\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            x: {\r\n                grid:  {\r\n                    display: false\r\n                }\r\n               },\r\n            y: {\r\n               display: false\r\n            }\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: false\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handler to close the dialog\r\n     */\r\n    const handleClose = () => {\r\n        props.setOpenReviewChart(false);\r\n    };\r\n\r\n    /**\r\n     * Handler to toggle the chart\r\n     */\r\n    const handleChange = (event) => {\r\n        setBarChart(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div className=\"UserRatingsChart\">\r\n           <Dialog onClose={handleClose} open={props.open}>\r\n                <DialogTitle>Rating distribution</DialogTitle>\r\n                <Switch checked={barChart} onChange={handleChange} inputProps={{ 'aria-label': 'controlled' }} />\r\n                {\r\n                    barChart ? \r\n                        <Bar data={chartData} height={200} width={200} options={options}/> \r\n                        :\r\n                        <Pie data={chartData} height={200} width={200} options={{ plugins: { legend: { display: false }} }}/> \r\n                }\r\n           </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserRatingsChart;","import React, { useContext, useRef, useEffect, useState } from 'react';\r\nimport './Profile.css';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport Button from '@mui/material/Button';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { abbreviateNumber } from '../../utils/numbersUtils';\r\nimport UserActions from '../UserActions/UserActions';\r\nimport UserRatingsChart from '../UserRatingsChart/UserRatingsChart';\r\n\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/altimage.png\";\r\n\r\nconst Profile = () => {\r\n    const {user, setUser} = useContext(UserContext);\r\n    const width = useContext(ScreenWidthContext);\r\n    const name = user.profile.name;\r\n    const profilePicUrl = user.profile.profilePicUrl;\r\n    const [rating, setMyRating] = useState(null);\r\n    const [reviews, setReviews] = useState(null);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    const [userActions, setUserActions] = useState(null);\r\n    const [openReviewChart, setOpenReviewChart] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    /**\r\n     * Handler to display the Review chart.\r\n     */\r\n    const handleOpenReviewChart = () => {\r\n        setOpenReviewChart(true);\r\n    };\r\n\r\n    //Retrieve the user specific info in the initial-run.\r\n    useEffect(async () => {\r\n        const token = user?.token;\r\n        if(!token) {\r\n            raiseSnackbarMessage('Unable to Authenticate the User. Please login again', 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        const response = await axios({\r\n            method: 'GET',\r\n            url: process.env.REACT_APP_SERVER_URL + '/api/userActivity',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        if(response.status === 401) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        if(response.status !== 200) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            return;\r\n        }\r\n        let averageRating = 0;\r\n        if(response.data && response.data.ratingMap && response.data.ratingCount) {\r\n            let sum = 0;\r\n            for(let key in response.data.ratingMap) {\r\n                //sum  += key * response.data.ratingMap[key];\r\n                averageRating += (key * response.data.ratingMap[key]) / response.data.ratingCount;\r\n            }\r\n            //averageRating = sum / response.data.ratingCount;\r\n            averageRating = averageRating.toFixed(2);\r\n        }\r\n        setMyRating({ratingCount: response.data.ratingCount, averageRating: averageRating, ratingMap: response.data.ratingMap});\r\n        setReviews(response.data.reviews);\r\n    }, []);\r\n\r\n    /**\r\n     * Retrieve the current User's actions in the initial run.\r\n     */\r\n    useEffect(async () => {\r\n        const token = user?.token;\r\n        if(!token) {\r\n            raiseSnackbarMessage('Unable to Authenticate the User. Please login again', 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        const response = await axios({\r\n            method: 'GET',\r\n            url: process.env.REACT_APP_SERVER_URL + '/api/userActions',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n        if(response.status === 401) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        if(response.status !== 200) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            return;\r\n        }\r\n        setUserActions(response.data);\r\n    }, []);\r\n\r\n    /**\r\n     * Handler to navigate to the user rated books page.\r\n     */\r\n     const handleRatedPageNavigation = (event) => {\r\n        navigate(`/mybooks/rated`, {state: 'rated'});\r\n    };\r\n\r\n    /**\r\n     * Handler to navigate to the user's reviews page.\r\n     */\r\n    const handleUserReviewsNavigation = () => {\r\n        navigate('/myReviews', {state: {\r\n            reviews: reviews\r\n        }});\r\n    };\r\n\r\n    /*\r\n    Function to sign-out the current logged-in user.\r\n    */\r\n    const signOutUser = () => {\r\n        localStorage.setItem(\"betterreadsuserinfo\", null);\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <div className={`Profile  ${width < 1400 ? 'mobile' : ''}`}>\r\n            <div className={`Profile-details-wrapper`}>\r\n                <div className=\"Profile-image-wrapper\">\r\n                    <img src={profilePicUrl}\r\n                    className=\"Profile-user-pic\" />\r\n                </div>\r\n                <div className=\"Profile-info-wrapper\">\r\n                    <p className=\"Profile-name\" title={name}>{name}</p>\r\n                    {rating ?\r\n                        <div className=\"Profile-rating-wrapper\">\r\n                            {\r\n                                rating.ratingCount ?\r\n                                    <>\r\n                                        <span className=\"Profile-rating-count\" onClick={handleRatedPageNavigation}>\r\n                                            {abbreviateNumber(rating.ratingCount)} {rating.ratingCount > 1 ? 'ratings' : 'rating'}\r\n                                        </span>\r\n                                     </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                rating.averageRating > 0 ?\r\n                                    <span className=\"Profile-average-rating\" onClick={handleOpenReviewChart}>\r\n                                        ({rating.averageRating} average)\r\n                                    </span>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                        : null\r\n                    }\r\n                    {\r\n                        reviews && reviews.length ?\r\n                        <div className=\"Profile-review-wrapper\">\r\n                            <span className=\"Profile-review-count\" onClick={handleUserReviewsNavigation}>\r\n                                {reviews.length} {reviews.length > 1 ? 'reviews' : 'review'}\r\n                            </span>\r\n                        </div>\r\n                        : null\r\n                    }\r\n                    <Button className=\"Profile-sign-out\" variant=\"outlined\" color=\"error\" onClick={signOutUser}>Sign Out</Button>\r\n                    <UserRatingsChart data={rating?.ratingMap} open={openReviewChart} setOpenReviewChart={setOpenReviewChart} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Profile-user-actions-wrapper\">\r\n                <UserActions data={userActions?.userActions} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { useContext } from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\n\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst SnackBar = (props) => {\r\n\r\nconst {snackbarOpen: open, toggleSnackbar: setOpen, snackbarObj: details} = useContext(SnackbarContext);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={2} sx={{ width: '100%' }}>\r\n      <Snackbar open={open} autoHideDuration={2000} onClose={handleClose} key=\"bottom + center\" \r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}>\r\n        <Alert onClose={handleClose} severity={details?.current?.severity} sx={{ width: '100%' }}>\r\n          {details?.current?.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SnackBar;\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport './BookResults.css';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n\r\nconst COVER_PIC_URL_PREFIX = \"https://covers.openlibrary.org/b/id/\";\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/ImgNotAvailable.jpg\";\r\nconst SEARCH_QUERY_PREFIX = \"https://openlibrary.org/search.json\";\r\n\r\nconst BookResults = (props) => {\r\n    const state = useLocation();\r\n    const [data, setData] = useState(state.state?.docs || []);\r\n    const paginationCount = Math.ceil((state.state?.numFound || state.state?.num_found) / 10);\r\n    const [paginationIndex, setPaginationIndex] = useState(1);\r\n    const width = useContext(ScreenWidthContext);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    const navigate = useNavigate();\r\n    const [displayLoadingSpinner, setDisplayLoadingSpinner] = useState(false);\r\n\r\n    /**\r\n     * Function to handle the change in pagination index.\r\n     */\r\n    const handlePaginationChange = async (event, value) => {\r\n        setPaginationIndex(value);\r\n        setDisplayLoadingSpinner(true);\r\n        const response = await axios({\r\n            method: \"GET\",\r\n            url: SEARCH_QUERY_PREFIX + state.search + `&limit=10&offset=${value}`\r\n        });\r\n        setDisplayLoadingSpinner(false);\r\n        if(response.status !== 200 || response.data.numFound === 0) {\r\n            raiseSnackbarMessage('Unable to fetch the Search result. Please try again later or try a different search', 'error');\r\n        }\r\n        else {\r\n            setData(response.data.docs);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This function redirects the user to the selected individual search result page.\r\n     */\r\n    const searchResultSelected = (event) => {\r\n        const worksId = event.currentTarget.getAttribute(\"itemid\");\r\n        let id = worksId.split(\"/\");\r\n        id = id.pop();\r\n        navigate(`/book/${id}`, {state: id});\r\n    };\r\n\r\n    /**\r\n     * Update the pagination index to 1 whenever there is a change in search query.\r\n     */\r\n    useEffect(() => {\r\n        setPaginationIndex(1);\r\n        setData(state.state?.docs || []);\r\n    }, state.key);\r\n\r\n    const noResultsJSX = (\r\n        <div className=\"BookResults-no-results\">\r\n            <p>No results to display. Please try a different Search</p>\r\n        </div>\r\n    );\r\n    const displayResultsJSX = (\r\n        <div className=\"BookResults-wrapper\">\r\n            {\r\n                data && data.length ? \r\n                    data.map(obj => (\r\n                        <div key={obj.key} coverid={obj.cover_i} itemID={obj.key} \r\n                            className={`BookResults-result-card ${width < 800 ? 'mobile' : width < 1000 ? 'tablet' : ''}`}>\r\n                            <Card sx={{ maxWidth: 345 }} itemID={obj.key} onClick={searchResultSelected}>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt={ALT_IMAGE_PATH}\r\n                                    image={obj.cover_i ? COVER_PIC_URL_PREFIX + obj.cover_i + \"-M.jpg\" : ALT_IMAGE_PATH}\r\n                                />\r\n                                <div className=\"BookResults-result-card-details-wrapper\">\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\" title={obj.title}>\r\n                                            {obj.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                            Initial Published Year: {obj.first_publish_year}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    ))\r\n                    : null\r\n            }\r\n\r\n            {\r\n                displayLoadingSpinner ? \r\n                <div className=\"BookResults-loading-spinner-wrapper\">\r\n                    <CircularProgress /> \r\n                </div> \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"BookResults\">\r\n            {data ? displayResultsJSX : noResultsJSX}\r\n            {data ? \r\n                <div className=\"BookResults-pagination-wrapper\">\r\n                    <Pagination count={paginationCount} page={paginationIndex} onChange={handlePaginationChange} \r\n                        variant=\"outlined\" color=\"primary\" />  \r\n                </div> \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookResults;","import React, { useState, useEffect, useContext } from 'react';\r\nimport './AuthorWorks.css';\r\nimport axios from 'axios';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AUTHOR_WORKS_URL_PREFIX = \"https://openlibrary.org\";\r\nconst WORK_COVER_URL_PREFIX = \"https://covers.openlibrary.org/b/id/\";\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/ImgNotAvailable.jpg\";\r\n\r\nconst AuthorWorks = (props) => {\r\n    const authorId = props.id;\r\n    const limit = props.limit || 50;\r\n    const [works, setWorks] = useState(null);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    const navigate = useNavigate();\r\n    \r\n    /**\r\n     * Handler to navigate the user to the selected book page.\r\n     */\r\n    const navigationHandler = (event) => {\r\n        const worksId = event.currentTarget.getAttribute(\"bookid\");\r\n        let id = worksId.split(\"/\").pop();\r\n        console.log(\"before nav\", id);\r\n        navigate(`/book/${id}`, {state: id});\r\n    };\r\n\r\n\r\n    /**\r\n     * Retrive the Author's works in the initial-run.\r\n     */\r\n    useEffect(async () => {\r\n            const response = await axios({\r\n            method: \"GET\",\r\n            url: AUTHOR_WORKS_URL_PREFIX + authorId + \"/works.json?limit=\" + limit,\r\n        });\r\n        if(!response || !response.data || response.status !== 200) {\r\n            raiseSnackbarMessage('Unable to retrieve the works of Author', 'error');\r\n            return;\r\n        }\r\n        setWorks(response.data.entries);\r\n    }, [props.id]);\r\n\r\n    const noResultsJSX = (\r\n        <div className=\"AuthorWorks-no-results\">\r\n            <p>No Author works to display.</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"AuthorWorks\">\r\n            {!works ? noResultsJSX :\r\n                <>\r\n                    {works?.map(obj => \r\n                        <div className=\"AuthorWorks-work-wrapper\" key={obj.key}>\r\n                            <div className=\"AuthorWorks-work-cover-wrapper\" bookid={obj.key} onClick={navigationHandler}>\r\n                                <img alt={ALT_IMAGE_PATH} src={obj && obj.covers && obj.covers.length ? WORK_COVER_URL_PREFIX + obj.covers[0] + \"-M.jpg\" : ALT_IMAGE_PATH} />\r\n                            </div>\r\n                            <div className=\"Authorworks-work-title-wrapper\" title={obj.title}>\r\n                                <p>{obj.title}</p>\r\n                            </div>\r\n                        </div>    \r\n                    )}\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthorWorks;","const USER_BOOK_STATUS_CONSTANTS = {\r\n    WANT_TO_READ: 'Want to Read',\r\n    CURRENTLY_READING: 'Currently Reading',\r\n    READ: 'Read',\r\n    NONE: 'None'\r\n};\r\n\r\nexport const USER_BOOK_STATUS_CONSTANTS_LIST = [USER_BOOK_STATUS_CONSTANTS.CURRENTLY_READING, \r\n            USER_BOOK_STATUS_CONSTANTS.WANT_TO_READ, USER_BOOK_STATUS_CONSTANTS.READ];\r\n\r\nexport default USER_BOOK_STATUS_CONSTANTS;","//A context to distribute User information. \r\n\r\nimport {createContext} from 'react';\r\n\r\nconst UserBookContext = createContext(null);\r\n\r\nexport default UserBookContext;","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport './UserBookExtrasDialog.css';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport USER_BOOK_STATUS_CONSTANTS from '../../utils/userBookStatusConstants';\r\nimport moment from 'moment';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport UserBookContext from '../../contexts/UserBookContext';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nconst DialogHeader = (props) => {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                aria-label=\"close\"\r\n                onClick={onClose}\r\n                sx={{\r\n                    position: 'absolute',\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                }}\r\n                >\r\n                <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n            </DialogTitle>\r\n        );\r\n    };\r\n\r\nDialogHeader.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst PaperComponent = (props) => {\r\n    return (\r\n      <Draggable\r\n        handle=\"#draggable-dialog-title\"\r\n        cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n      >\r\n        <Paper {...props} />\r\n      </Draggable>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nconst UserBookExtrasDialog = (props) => {\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [targetDate, setTargetDate] = useState(null);\r\n    const {user, setUser} = useContext(UserContext);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    const dateError = useRef(false);\r\n    const width = useContext(ScreenWidthContext);\r\n    const [currentReviewContent, setReviewContent] = useState('');\r\n    const prevReviewContent = useRef(props.reviewContent);\r\n    const {setCurrentUserReview, bookId} = useContext(UserBookContext);\r\n    /**\r\n     * Handler to close the dialog.\r\n     */\r\n    const handleClose = () => {\r\n        props.setDialogOpen(false);\r\n    };\r\n\r\n    /**\r\n     * Handler to update the review state.\r\n     */\r\n    const handleReviewUpdate = (event) => {\r\n        setReviewContent(event.target.value);\r\n    };\r\n\r\n    \r\n    /**\r\n     * Due to the async nature of useState, the value of endDate, startDate isn't updated when navigating from the Author-works.\r\n     * To make sure the component renders with the expected status value, setting the status again.\r\n     */\r\n    useEffect(() => {\r\n        setStartDate(props.startDate || null);\r\n        setEndDate(props.endDate || null);\r\n        setTargetDate(props.targetDate || null);\r\n        setReviewContent(props.reviewContent); console.log('In UseEffect', bookId, props.reviewContent);\r\n    }, [props.startDate, props.endDate, props.setTargetDate, props.reviewContent, bookId]);\r\n\r\n\r\n    /**\r\n     * Handler to submit the changes for he book by the user.\r\n     */\r\n    const handleSubmit = async () => {\r\n        handleClose();\r\n        const token = user?.token;\r\n      \r\n        if(!token) {\r\n            raiseSnackbarMessage('Unable to Authenticate the User. Please login again', 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        const response = await axios({\r\n            method: \"PATCH\",\r\n            url: process.env.REACT_APP_SERVER_URL + `/api/book/${bookId}`,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            data: {\r\n                extras: {\r\n                    userName: user.profile?.name,\r\n                    profilePicUrl: user.profile?.profilePicUrl,\r\n                    rating: props.rating,\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    targetDate: targetDate,\r\n                    status: props.status,\r\n                    prevReview: prevReviewContent.current,\r\n                    reviewContent: currentReviewContent\r\n                },\r\n                cover : props.bookCover,\r\n                name: props.bookName\r\n            }\r\n        });\r\n    \r\n        if(response.status === 401) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n        if(response.status !== 200) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            return;\r\n        }\r\n\r\n        if(prevReviewContent.current !== currentReviewContent) {\r\n            setCurrentUserReview({\r\n                reviewContent: currentReviewContent, \r\n                reviewTimeStamp: Date.now()\r\n            });\r\n        }\r\n\r\n        //Storing the currentReviewContent as prevReviewContent in-case the User sticks to the same screen & edits his\r\n        //review\r\n        prevReviewContent.current = currentReviewContent;\r\n    };\r\n\r\n    return (\r\n        <div className=\"UserBookExtrasDialog\">\r\n            <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                open={props.setOpen}\r\n                PaperComponent={PaperComponent}\r\n            >\r\n                <DialogHeader id=\"customized-dialog-title\" onClose={handleClose} style={{cursor: 'move'}}>\r\n                    <p className=\"UserBookExtrasDialog-title\">{props.bookName}</p>\r\n                </DialogHeader>\r\n\r\n                    <DialogContent dividers>\r\n                        <div className=\"UserBookExtrasDialog-content-wrapper\">\r\n                            <div className={`UserBookExtrasDialog-content-dates-wrapper ${width < 600 ? 'mobile600' : null}`}>\r\n                                {\r\n                                    props.status && (props.status === USER_BOOK_STATUS_CONSTANTS.CURRENTLY_READING || \r\n                                        props.status === USER_BOOK_STATUS_CONSTANTS.READ) && \r\n                                        <div className=\"UserBookExtrasDialog-start-date-wrapper\">\r\n                                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                                <DatePicker \r\n                                                    label=\"Start Date\"\r\n                                                    value={startDate}\r\n                                                    onChange={(newValue) => {\r\n                                                        if(props.status === USER_BOOK_STATUS_CONSTANTS.READ && endDate) {\r\n                                                            //If the start Date is greater than the end date, mark for error\r\n                                                            //and disable 'Save Changes'.\r\n                                                            const val1 = Date.parse(moment(newValue).format(\"YYYY-MM-DD\") + \"T00:00:00\");\r\n                                                            const val2 = Date.parse(moment(endDate).format(\"YYYY-MM-DD\") + \"T00:00:00\");\r\n                                                            console.log(val1, val2);\r\n                                                            if(val1 > val2) {\r\n                                                                dateError.current = true;\r\n                                                            }\r\n                                                            else {\r\n                                                                dateError.current = false;\r\n                                                            }\r\n                                                        }\r\n                                                        else {\r\n                                                            dateError.current = false;\r\n                                                        }\r\n                                                        setStartDate(newValue);\r\n                                                    }}\r\n                                                    maxDate = {new Date()}\r\n                                                    renderInput={(params) => (\r\n                                                    <TextField {...params}/>\r\n                                                    )}\r\n                                                />\r\n                                            </LocalizationProvider>\r\n                                        </div>\r\n                                }\r\n                                {\r\n                                    props.status && props.status === USER_BOOK_STATUS_CONSTANTS.READ &&\r\n                                        <div className={`UserBookExtrasDialog-end-date-wrapper ${dateError.current === true ? 'error' : null}`}> \r\n                                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                                    <DatePicker\r\n                                                        label=\"End Date\"\r\n                                                        value={endDate}\r\n                                                        onChange={(newValue) => {\r\n                                                            if(props.status === USER_BOOK_STATUS_CONSTANTS.READ && startDate) {\r\n                                                                //If the start Date is greater than the end date, mark for error\r\n                                                                //and disable 'Save Changes'.\r\n                                                                const val1 = Date.parse(moment(startDate).format(\"YYYY-MM-DD\") + \"T00:00:00\");\r\n                                                                const val2 = Date.parse(moment(newValue).format(\"YYYY-MM-DD\") + \"T00:00:00\");\r\n                                                                console.log(val1, val2);\r\n                                                                if(val1 > val2) {\r\n                                                                    dateError.current = true;\r\n                                                                }\r\n                                                                else {\r\n                                                                    dateError.current = false;\r\n                                                                }\r\n                                                            }\r\n                                                            else {\r\n                                                                dateError.current = false;\r\n                                                            }\r\n                                                            setEndDate(newValue);\r\n                                                        }}\r\n                                                        maxDate = {new Date()}\r\n                                                        renderInput={(params) => (\r\n                                                        <TextField {...params}/>\r\n                                                        )}\r\n                                                    />\r\n                                            </LocalizationProvider>\r\n                                        </div>\r\n                                }\r\n                                {\r\n                                    props.status && props.status === USER_BOOK_STATUS_CONSTANTS.WANT_TO_READ &&\r\n                                        <div className=\"UserBookExtrasDialog-end-date-wrapper\"> \r\n                                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                                    <DatePicker\r\n                                                        label=\"Target Date\"\r\n                                                        value={targetDate}\r\n                                                        onChange={(newValue) => {\r\n                                                            setTargetDate(newValue);\r\n                                                        }}\r\n                                                        minDate = {new Date()}\r\n                                                        renderInput={(params) => (\r\n                                                        <TextField {...params}/>\r\n                                                        )}\r\n                                                    />\r\n                                            </LocalizationProvider>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"UserBookExtrasDialog-review-wrapper\">\r\n                                <TextField value={currentReviewContent} multiline \r\n                                inputProps={{ maxLength: 280 }} fullWidth label=\"review\" id=\"fullWidth\" \r\n                                onChange={handleReviewUpdate} />\r\n                                <div className=\"UserBookExtrasDialog-review-utils-wrapper\">\r\n                                    { (currentReviewContent !== null && currentReviewContent !== undefined) ?\r\n                                        <div className='UserBookExtrasDialog-review-progress-wrapper' title={`${currentReviewContent.length} / 280`}>\r\n                                            <CircularProgress variant=\"determinate\" color=\"secondary\" \r\n                                                value={((currentReviewContent.length * 100) / 280).toFixed(2)} />\r\n                                        </div>\r\n                                        : null\r\n                                    }\r\n                                    {\r\n                                        props.reviewTimeStamp && \r\n                                            <div className=\"UserBookExtrasDialog-timestamp-wrapper\">\r\n                                                <p>last updated: {moment(props.reviewTimeStamp).format(\"D MMM YYYY\")}</p>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                \r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={handleSubmit} disabled={dateError.current}>\r\n                            Save changes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default UserBookExtrasDialog;","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport './UserBookStatus.css';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport axios from 'axios';\r\nimport USER_BOOK_STATUS_CONSTANTS from '../../utils/userBookStatusConstants';\r\nimport UserBookExtrasDialog from '../UserBookExtrasDialog/UserBookExtrasDialog';\r\n\r\n\r\nconst USER_BOOK_STATUS_LIST = [USER_BOOK_STATUS_CONSTANTS.NONE, USER_BOOK_STATUS_CONSTANTS.WANT_TO_READ,\r\n   USER_BOOK_STATUS_CONSTANTS.CURRENTLY_READING, USER_BOOK_STATUS_CONSTANTS.READ];\r\n\r\nconst UserBookStatus = (props) => {\r\n  const [status, setStatus] = useState('');\r\n  const {user, setUser} = useContext(UserContext);\r\n  const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n  const renderCount = useRef(0);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  /**\r\n   * Handler to open the UserBookExtrasDialog.\r\n   */\r\n  const handleDialogOpen = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  /**\r\n   * Handler to modify the status of the book for the current user.\r\n   */\r\n  const handleChange = async (event) => {\r\n    const prevVal = status;\r\n    const statusVal = event.target.value;\r\n    setStatus(statusVal);\r\n    if(props.updateStatus) {\r\n      props.updateStatus(statusVal);\r\n    }\r\n    renderCount.current += 1;\r\n    const token = user?.token;\r\n\r\n    if(!token) {\r\n        raiseSnackbarMessage('Unable to Authenticate the User. Please login again', 'error');\r\n        localStorage.setItem(\"betterreadsuserinfo\", null);\r\n        setUser(null);\r\n    }\r\n\r\n    const response = await axios({\r\n        method: \"PATCH\",\r\n        url: process.env.REACT_APP_SERVER_URL + `/api/book/${props.bookId}`,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        data: {\r\n            status: {\r\n                current: statusVal,\r\n                prev: prevVal\r\n            },\r\n            cover : props.cover,\r\n            name: props.name,\r\n            startDate: props.startDate,\r\n            endDate: props.endDate,\r\n            targetDate: props.targetDate\r\n        }\r\n    });\r\n\r\n    if(response.status === 401) {\r\n        raiseSnackbarMessage(response.data.message, 'error');\r\n        localStorage.setItem(\"betterreadsuserinfo\", null);\r\n        setUser(null);\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Due to the async nature of useState, the value of status isn't updated when navigating from the Authorworks.\r\n   * To make sure the component renders with the expected status value, setting the status again.\r\n   */\r\n  useEffect(() => {\r\n    setStatus(props.status ? props.status : USER_BOOK_STATUS_LIST[0]);\r\n  }, [props.status]);\r\n\r\n  return (\r\n    <div className=\"UserBookStatus\">\r\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n        <InputLabel id=\"demo-simple-select-standard-label\">Status</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-standard-label\"\r\n          inputProps={{MenuProps: {disableScrollLock: true}}}\r\n          id=\"demo-simple-select-standard\"\r\n          value={status}\r\n          onChange={handleChange}\r\n          label=\"Status\"\r\n        >\r\n            {USER_BOOK_STATUS_LIST.map( (val, idx) => <MenuItem value={val} key={idx}>{val}</MenuItem>)}\r\n        </Select>\r\n      </FormControl>\r\n      \r\n      <UserBookExtrasDialog setOpen={dialogOpen} setDialogOpen={setDialogOpen} bookName={props.name} status={status} \r\n        bookId={props.bookId} bookCover={props.cover} startDate={props.startDate} endDate={props.endDate} targetDate={props.targetDate}\r\n          rating={props.rating} reviewContent={props.reviewContent} reviewTimeStamp={props.reviewTimeStamp} />\r\n\r\n      { \r\n        status !== USER_BOOK_STATUS_CONSTANTS.NONE &&\r\n          <div className=\"UserBookStatus-edit-details-wrapper\">\r\n              <p onClick={handleDialogOpen}>{`Edit Dates & Submit Review`}</p>\r\n          </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBookStatus;\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport './UserBookRating.css'\r\nimport Rating from '@mui/material/Rating';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport axios from 'axios';\r\n\r\nconst UserBookRating = (props) => {\r\n    const [rating, setRating] = useState(props.rating || 0);\r\n    const {user, setUser} = useContext(UserContext);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    \r\n    /**\r\n     * Handler to update the rating of the current book by the current user.\r\n    */\r\n    const handleRatingUpdate = async (event, value) => {\r\n        const token = user?.token;\r\n        if(!token) {\r\n            raiseSnackbarMessage('Unable to Authenticate the User. Please login again', 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n        \r\n        setRating(value);\r\n\r\n        const response = await axios({\r\n            method: \"PATCH\",\r\n            url: process.env.REACT_APP_SERVER_URL + `/api/book/${props.bookId}`,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            data: {\r\n                rating: {\r\n                    prev: rating,\r\n                    current: value\r\n                },\r\n                cover : props.cover,\r\n                name: props.name\r\n            }\r\n        });\r\n\r\n        if(response.status === 401) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n        else if(response.status !== 200) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Due to the async nature of useState, the rating isn't updated while navigating from the AuthorWorks.\r\n     * Setting the rating again to make sure the component renders with the expected rating.\r\n    */\r\n    useEffect(() => {\r\n        setRating(props.rating ? props.rating : 0);\r\n    }, [props.bookId, props.rating]);\r\n\r\n\r\n    return (\r\n        <div className=\"UserBookRating\">\r\n             <div className=\"UserBookRating-title-wrapper\">\r\n                 <p>{rating > 0 ? 'My rating' : 'Rate this book'}</p>\r\n             </div>\r\n            <Rating name=\"half-rating\" value={rating} precision={0.5} onChange={handleRatingUpdate} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserBookRating;","import React, {useContext, useState} from \"react\";\r\nimport './BookReviews.css';\r\nimport moment from 'moment';\r\nimport { ScreenWidthContext } from \"../../contexts/ScreenWidthContext\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { UserContext } from '../../contexts/UserContext';\r\n\r\nconst BookReviews = (props) => {\r\n    const { user } = useContext(UserContext);\r\n    const reviews = props.reviews;\r\n    const userId = props.userId;\r\n    const userReview = props.userReview;\r\n    const width = useContext(ScreenWidthContext);\r\n    const paginationCount = Math.ceil((reviews && reviews.length ? reviews.length : 0) / 10);\r\n    const [paginationIndex, setPaginationIndex] = useState(1);\r\n    const userName = user.profile.name;\r\n    const profilePicUrl = user.profile.profilePicUrl;\r\n\r\n    /**\r\n     * Function to handle the change in pagination index.\r\n     */\r\n     const handlePaginationChange = (event, value) => {\r\n        setPaginationIndex(value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"BookReviews\">\r\n            { userReview && userReview.reviewContent ?\r\n                <div className=\"BookReviews-review\">\r\n                    <div className=\"BookReviews-review-image-wrapper\">\r\n                            <img src={profilePicUrl} />\r\n                       </div>\r\n                       <div className=\"BookReviews-review-body-wrapper\">\r\n                            <div className={`BookReviews-review-header-wrapper ${width < 900 ? 'mobile900' : null}`}>\r\n                                <p className=\"BookReviews-review-user-name\">{userName}</p>\r\n                                <p className=\"BookReviews-review-published-date\">{moment(userReview.reviewTimeStamp).format(\"D MMM, YY\")}</p>\r\n                            </div>\r\n                            <div className=\"BookReviews-review-content-wrapper\">\r\n                                <span>{userReview.reviewContent}</span>\r\n                            </div>\r\n                       </div>\r\n                </div>\r\n                : null\r\n            }\r\n            {\r\n                reviews && reviews.length ? reviews.slice(10 * (paginationIndex - 1), 10 * paginationIndex).filter((obj) => obj._id !== userId).map((review, idx) => \r\n                    <div className=\"BookReviews-review\" key={idx}>\r\n                       <div className=\"BookReviews-review-image-wrapper\">\r\n                            <img src={review.profilePicUrl} />\r\n                       </div>\r\n                       <div className=\"BookReviews-review-body-wrapper\">\r\n                            <div className={`BookReviews-review-header-wrapper ${width < 900 ? 'mobile900' : null}`}>\r\n                                <p className=\"BookReviews-review-user-name\">{review.userName}</p>\r\n                                <p className=\"BookReviews-review-published-date\">{moment(review.timeStamp).format(\"D MMM, YY\")}</p>\r\n                            </div>\r\n                            <div className=\"BookReviews-review-content-wrapper\">\r\n                                <span>{review.reviewContent}</span>\r\n                            </div>\r\n                       </div>\r\n                    </div>\r\n                )\r\n                : null\r\n            }\r\n            {\r\n                reviews && reviews.length ? \r\n                    <div className=\"BookReviews-pagination-wrapper\">\r\n                        <Pagination count={paginationCount} page={paginationIndex} onChange={handlePaginationChange} \r\n                            variant=\"outlined\" color=\"primary\" />  \r\n                    </div> \r\n                    : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookReviews;","import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router';\r\nimport './Book.css';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport Chip from '@mui/material/Chip';\r\nimport AuthorWorks from '../AuthorWorks/AuthorWorks';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UserBookStatus from '../UserBookStatus/UserBookStatus';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport UserBookRating from '../UserBookRating/UserBookRating';\r\nimport BookReviews from '../BookReviews/BookReviews';\r\nimport UserBookContext from '../../contexts/UserBookContext';\r\nimport ProgressBar from 'react-customizable-progressbar';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport USER_BOOK_STATUS_CONSTANTS from '../../utils/userBookStatusConstants';\r\n\r\nconst BOOK_SEARCH_URL_PREFIX = \"https://openlibrary.org/works/\";\r\nconst AUTHOR_INFO_URL_PREFIX = \"https://openlibrary.org\";\r\nconst BOOK_THUMBNAIL_URL_PREFIX = \"https://covers.openlibrary.org/b/id/\";\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/ImgNotAvailable.jpg\";\r\n\r\nconst CHIP_STYLES = [\r\n    {background: \"linear-gradient(#7D141D, #FF1E27)\", color: \"#F4EFEA\"},\r\n    {backgroundColor: \"#292826\", color: \"#F9D342\"},\r\n    {backgroundColor: \"#FBEAEB\", color: \"#2F3C7E\"},\r\n    {background: \"linear-gradient(#F6B042, #F9ED4E)\", color: \"#533549,\"},\r\n    {backgroundColor: \"#AA96DA\", color: \"#FFFFD2\"},\r\n    {backgroundColor: \"#080A52\", color: \"#EB2188\"}\r\n];\r\n\r\nconst Book = () => {\r\n    const state = useLocation();\r\n    const [book, setBook] = useState(null);\r\n    const [author, setAuthor] = useState(null);\r\n    const [userBook, setUserBook] = useState(null);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    const {user, setUser} = useContext(UserContext);\r\n    const width = useContext(ScreenWidthContext);\r\n    const navigate = useNavigate();\r\n    let bookId = state.pathname.split(\"/\").pop();\r\n    const [status, setStatus] = useState(null);\r\n    const [bookReviews, setBookReviews] = useState(null);\r\n    const [currentUserReview, setCurrentUserReview] = useState(null);\r\n    const [bookStats, setBookStats] = useState(null);\r\n    const [averageRating, setAverageRating] = useState(0);\r\n    let chartData;\r\n    if(bookStats && (bookStats.wantToReadCount || bookStats.readCount || bookStats.currentlyReadingCount) ) {\r\n        chartData = {\r\n            labels: [USER_BOOK_STATUS_CONSTANTS.CURRENTLY_READING, USER_BOOK_STATUS_CONSTANTS.WANT_TO_READ, USER_BOOK_STATUS_CONSTANTS.READ],\r\n            datasets: [{\r\n                data: [bookStats.currentlyReadingCount, bookStats.wantToReadCount, bookStats.readCount],\r\n                backgroundColor: [\r\n                    '#292826',\r\n                    'rgb(255, 99, 132)',\r\n                    '#AA96DA',\r\n                    'rgb(255, 205, 86)',\r\n                    'rgb(54, 162, 235)',\r\n                  ]\r\n            }]\r\n        };\r\n    }\r\n\r\n    //Fetch the book data from the provided ID in the initial-run.\r\n    useEffect(async () => {\r\n        console.log('Book component Re-render ', bookId);\r\n        axios({\r\n            method: \"GET\",\r\n            url: BOOK_SEARCH_URL_PREFIX + state.pathname.split(\"/\").pop() + \".json\"\r\n        }).then(response => {\r\n            if(response.status !== 200) {\r\n                raiseSnackbarMessage('Unable to retrieve the Book info. Please try again', 'error');\r\n            }\r\n            else {\r\n                setBook(response.data);\r\n                const authorId = response.data.authors && response.data.authors.length ? response.data.authors[0].author.key : null;\r\n                if(authorId === null) return;\r\n                //Get the Author info from the ID retrieved from the Book's response.\r\n                axios({\r\n                    method: \"GET\",\r\n                    url: AUTHOR_INFO_URL_PREFIX + authorId + \".json\",\r\n                }).then(response => {\r\n                    setAuthor(response.data);\r\n                });\r\n            }\r\n        });\r\n\r\n        //Fetch the User's status for the current book.\r\n        const token = user?.token;\r\n        axios({\r\n            method: \"GET\",\r\n            url: process.env.REACT_APP_SERVER_URL + `/api/book/` + state.pathname.split(\"/\").pop(),\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            if(response.status === 500) {\r\n                raiseSnackbarMessage(response.data.message, 'error');\r\n            }\r\n            else {\r\n                setUserBook(response.data);\r\n                setCurrentUserReview({reviewContent: response.data.reviewContent, reviewTimeStamp: response.data.reviewTimeStamp});\r\n                setStatus(response.data.status);\r\n            }\r\n        });\r\n\r\n        //Fetch the reviews for the current book.\r\n        axios({\r\n            method: \"GET\",\r\n            url: process.env.REACT_APP_SERVER_URL + '/api/bookReviews/' + state.pathname.split(\"/\").pop(),\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            if(response.status !== 200) {\r\n                raiseSnackbarMessage(response.data.message, 'error');\r\n            }\r\n            else {\r\n                setBookReviews(response.data);\r\n            }\r\n        });\r\n\r\n        //Fetch the statistics for the current book.\r\n        const bookStats = await axios({\r\n            method: \"GET\",\r\n            url: process.env.REACT_APP_SERVER_URL + '/api/book/' + state.pathname.split(\"/\").pop() + '/stats',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n        if(!bookStats || !bookStats.data || bookStats.status !== 200) {\r\n            raiseSnackbarMessage(bookStats.data.message, 'error');\r\n        }\r\n        else {\r\n            setBookStats(bookStats.data);\r\n            setAverageRating((bookStats.data.averageRating * 100) / 5);\r\n        }\r\n\r\n    }, [bookId]);\r\n\r\n    /**\r\n     * Handler to navigate to the Author's view.\r\n     */\r\n    const authorNavigationHandler = (event) => {\r\n        const authorId = event.currentTarget.getAttribute(\"authorid\").split(\"/\").pop();\r\n        navigate(`/author/${authorId}`, {state: authorId});\r\n    };\r\n    \r\n    const noResultsJSX = (\r\n        <div className=\"BookResults-no-results\">\r\n            <p>No results to display. Please try a different Search</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={`Book ${width < 1200 ? 'mobile1200' : ''}`}>\r\n            { (!book || !book.title) ? noResultsJSX :\r\n                <> \r\n                    <div className=\"Book-header\">\r\n                        <div className={`Book-Thumbnail-section-wrapper`}>\r\n                            <div className=\"Book-Thumbail-wrapper\">\r\n                                <img src={book && book.covers && book.covers.length ? BOOK_THUMBNAIL_URL_PREFIX + book?.covers[0] + \"-M.jpg\" : ALT_IMAGE_PATH} alt={ALT_IMAGE_PATH} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={`Book-details-section-wrapper ${width <= 900 ? 'mobile' : ''}`}>\r\n                            <div className=\"Book-details-title-wrapper\" title={book?.title}>\r\n                                <p>{book?.title}</p>\r\n                            </div>\r\n                            {author && author.name &&\r\n                                <div className=\"Book-details-author-wrapper\" title={author?.name}>\r\n                                    by <p authorid={author?.key} onClick={authorNavigationHandler}> {author?.name} </p>\r\n                                </div>\r\n                            }\r\n                            <div className=\"Book-details-description-wrapper\" title={book && book.description ? book.description.value : ''}>\r\n                                <p>{book && book.description ? book.description.value : ''}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`Book-current-user-utils-wrapper ${status}`}>\r\n                        <div className=\"Book-current-user-status-wrapper\">\r\n                            <UserBookContext.Provider value={{setCurrentUserReview, bookId: state.pathname.split(\"/\").pop()}}>\r\n                                <UserBookStatus bookId={state.pathname.split(\"/\").pop()} cover={book && book.covers && book.covers.length ? book.covers[0] : ALT_IMAGE_PATH} name={book?.title}  \r\n                                    status={status} rating = {userBook?.rating} startDate={userBook?.startDate} endDate={userBook?.endDate} targetDate={userBook?.targetDate} \r\n                                    updateStatus={setStatus} reviewContent={userBook?.reviewContent} reviewTimeStamp={userBook?.reviewTimeStamp}\r\n                                />\r\n                            </UserBookContext.Provider>\r\n                        </div>\r\n                        <div className=\"Book-current-user-rating-wrapper\">\r\n                            <UserBookRating bookId={state.pathname.split(\"/\").pop()} cover={book && book.covers && book.covers.length ? book.covers[0] : ALT_IMAGE_PATH} \r\n                            name={book?.title} status={userBook?.status} rating = {userBook?.rating}/>\r\n                        </div>\r\n                        <div className=\"Book-stats-wrapper\">\r\n                            {\r\n                                bookStats && bookStats.averageRating ?\r\n                                    <div className=\"Book-stats-rating-wrapper\">\r\n                                        <ProgressBar\r\n                                                progress={averageRating.toFixed(2)}\r\n                                                radius={100}\r\n                                                className={`${averageRating > 75 ? 'green' : averageRating > 50 ? 'orange' : 'red'}`}\r\n                                        >\r\n                                            <span className=\"Book-stats-rating-content\">{bookStats.averageRating} / {5}</span>\r\n                                        </ProgressBar>\r\n                                        <span>{bookStats.ratingCount} {bookStats.ratingCount > 1 ? 'ratings' : 'rating'}</span>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                chartData ?\r\n                                    <div className=\"Book-stats-chart-wrapper\">\r\n                                        <div className=\"Book-stats-chart\">\r\n                                            <Doughnut responsive data={chartData} height={200} width={200}\r\n                                            options={{ plugins: { legend: { display: false }} }}/>\r\n                                        </div> \r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n        \r\n                    { book && (book.subject_people || book.subject_places) &&\r\n                         <div className=\"Book-extras\">\r\n                            <div className={`Book-characters-wrapper ${width <= 850 ? 'mobile' : ''}`}>\r\n                                {book && book.subject_people && book.subject_people.filter((val, idx) => idx < 10).map((value, index) => {\r\n                                    return <Chip label={value} key={value} title={value} style={CHIP_STYLES[index % CHIP_STYLES.length]} />\r\n                                })}\r\n                            </div>\r\n                            <div className={`Book-places-wrapper ${width <= 850 ? 'mobile' : ''}`}>\r\n                                {book && book.subject_places && book.subject_places.filter((val, idx) => idx < 10).map((value, index) => {\r\n                                    return <Chip label={value} key={value} title={value} style={CHIP_STYLES[(CHIP_STYLES.length - 1) - (index % CHIP_STYLES.length)]} color=\"primary\" />\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    { author && author.name ?\r\n                        <>\r\n                            <div className=\"Book-author-works-title-wrapper\">\r\n                                <p> Works by {author.name} </p>\r\n                            </div>\r\n                            <div className=\"Book-author-works-wrapper\">\r\n                                <AuthorWorks id={author?.key} limit={20} />\r\n                            </div>\r\n                        </>\r\n                        : null\r\n                    }\r\n\r\n                    {\r\n                        (bookReviews && bookReviews.reviews && bookReviews.reviews.length) || (currentUserReview && currentUserReview.reviewContent) ?\r\n                            <div className=\"Book-reviews-wrapper\">\r\n                                <div className=\"Book-reviews-title-wrapper\">\r\n                                    <p>Community Reviews</p>\r\n                                </div>\r\n                                <BookReviews bookId={state.pathname.split(\"/\").pop()} reviews={bookReviews?.reviews} \r\n                                userReview={currentUserReview} userId={bookReviews?.userId} />\r\n                            </div>\r\n                            : null\r\n                    }\r\n\r\n                    <div className=\"Book-footer\">\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Book;","import React, { useState, useContext, useEffect } from 'react';\r\nimport './Author.css';\r\nimport { useLocation } from 'react-router';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport AuthorWorks from '../AuthorWorks/AuthorWorks';\r\nimport axios from 'axios';\r\n\r\nconst AUHTOR_INFO_URL_PREFIX = \"https://openlibrary.org/authors/\";\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/ImgNotAvailable.jpg\";\r\nconst AUTHOR_IMAGE_URL_PREFIX = \"https://covers.openlibrary.org/a/id/\";\r\n\r\nconst Author = (props) => {\r\n    const state = useLocation();\r\n    console.log(state);\r\n    const authorId = state.pathname.split(\"/\").pop();\r\n    console.log(authorId);\r\n    const [author, setAuthor] = useState(null);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    const width = useContext(ScreenWidthContext);\r\n\r\n    /**\r\n     * Fetch the author details in the initiaal-setup.\r\n     */\r\n    useEffect(async () => {\r\n        const response = await axios({\r\n            method: \"GET\",\r\n            url: AUHTOR_INFO_URL_PREFIX + authorId + \".json\"\r\n        });\r\n\r\n        if(!response || !response.data || response.status !== 200) {\r\n            raiseSnackbarMessage('Unable to retrieve the Author info. Please try again.', 'error');\r\n            return;\r\n        }\r\n        console.log(response.data);\r\n        setAuthor(response.data);\r\n    }, []);\r\n\r\n    const noResultsJSX = (\r\n        <div className=\"BookResults-no-results\">\r\n            <p>Nothing to display.</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={`Author ${width < 1200 ? 'mobile1200' : ''}`}>\r\n            {!author ? noResultsJSX : \r\n            <>\r\n                <div className=\"Author-header\">\r\n                    \r\n                    <div className=\"Author-pic-wrapper\">\r\n                        <img src={ALT_IMAGE_PATH} \r\n                        src={author && author.photos && author.photos.length ? AUTHOR_IMAGE_URL_PREFIX + author.photos[0] + \"-L.jpg\" : ALT_IMAGE_PATH}/>\r\n                    </div>\r\n\r\n                    <div className=\"Author-details-wrapper\">\r\n                        <div className=\"Author-details-name-wrapper\">\r\n                            <p>{author?.name}</p>\r\n                        </div>\r\n                        { author && author.birth_date &&\r\n                            <div className=\"Author-details-birth-date-wrapper\">\r\n                                <span>Birth Date: </span>\r\n                                <span className=\"Author-details-birth-date\">{author?.birth_date}</span>\r\n                            </div>\r\n                        }\r\n                        <div className=\"Author-details-bio-wrapper\">\r\n                            <p>{author?.bio}</p>\r\n                        </div>\r\n                        <div className=\"Author-details-links-wrapper\">\r\n                            {author && author.links && author.links.length && author.links.filter((val, idx) => idx < 1).map((obj, index) => \r\n                                <div className=\"Author-details-link\" key={index}> \r\n                                    <a href={obj.url} target=\"_blank\">Website</a>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"Author-details-link\">\r\n                                {author && author.wikipedia && <a href={author.wikipedia} target=\"_blank\">Wiki</a>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"Author-author-works-wrapper\">\r\n                    <div className=\"Author-author-works-title-wrapper\">\r\n                        <p> Works By the Author </p>\r\n                    </div>\r\n                    <AuthorWorks id={author?.key} limit={30} />\r\n                </div>\r\n\r\n                <div className=\"Author-footer\">\r\n                </div>\r\n            </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Author;","import React from 'react';\r\nimport './BooksTile.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Rating from '@mui/material/Rating';\r\nimport Moment from 'react-moment';\r\n\r\nconst WORK_COVER_URL_PREFIX = \"https://covers.openlibrary.org/b/id/\";\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/ImgNotAvailable.jpg\";\r\n\r\nconst BooksTile = (props) => {\r\n    const books = props.books;\r\n    const navigate = useNavigate();\r\n\r\n    /**\r\n     * Handler to navigate the user to the selected book page.\r\n     */\r\n     const navigationHandler = (event) => {\r\n        const bookId = event.currentTarget.getAttribute(\"bookid\");\r\n        navigate(`/book/${bookId}`, {state: bookId});\r\n    };\r\n\r\n    return (\r\n        <div className=\"BooksTile\">\r\n            {books && books.filter((val, idx) => idx < 10).map((obj, idx) => \r\n                <div className=\"BooksTile-book-wrapper\" key={obj._id + \" \" + idx}>\r\n                    <div className=\"BooksTile-cover-wrapper\" onClick={navigationHandler} bookid={obj._id}>\r\n                        <img src={obj.cover ? WORK_COVER_URL_PREFIX + obj.cover + '-M.jpg' : ALT_IMAGE_PATH} \r\n                        alt ={ALT_IMAGE_PATH} title={obj.name}/>\r\n                    </div>\r\n                    <div className=\"BooksTile-name-wrapper\">\r\n                        {props.displayRating ? \r\n                            (obj && obj.rating ? \r\n                                <Rating value={obj.rating} precision={0.5} readOnly/>\r\n                                : null) \r\n                        \r\n                        : null}\r\n                        {\r\n                            props.displayStarted ?\r\n                            (obj && obj.startDate ?\r\n                                <span className=\"BooksTile-name-wrapper-started\">\r\n                                    Started: <Moment date={obj.startDate} format=\"D MMM YYYY\" /> \r\n                                </span>\r\n                                : null)\r\n                            : null\r\n                        }\r\n                        {\r\n                            props.displayCompleted ?\r\n                            (obj && obj.endDate ?\r\n                               <span className=\"BooksTile-name-wrapper-completed\"> \r\n                                   Completed: <Moment date={obj.endDate} format=\"D MMM YYYY\" />\r\n                                </span>\r\n                                : null)\r\n                            : null\r\n                        }\r\n                         {\r\n                            props.displayTarget ?\r\n                            (obj && obj.targetDate ?\r\n                               <span className=\"BooksTile-name-wrapper-target\"> \r\n                                   Target: <Moment date={obj.targetDate} format=\"D MMM YYYY\" />\r\n                                </span>\r\n                                : null)\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </div>    \r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BooksTile;","import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport './MyBooks.css';\r\nimport BooksTile from '../BooksTile/BooksTile';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport axios from 'axios';\r\nimport USER_BOOK_STATUS_CONSTANTS, { USER_BOOK_STATUS_CONSTANTS_LIST } from '../../utils/userBookStatusConstants';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst MyBooks = () => {\r\n    const {user, setUser} = useContext(UserContext);\r\n    const width = useRef(window.innerWidth);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    const [myBooks, setMyBooks] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    //Load the books info for the user in the intital-setup.\r\n    useEffect(async () => {\r\n        const token = user?.token;\r\n        if(!token) {\r\n            raiseSnackbarMessage('Unable to Authenticate the User. Please login again', 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        const response = await axios({\r\n            method: 'GET',\r\n            url: process.env.REACT_APP_SERVER_URL + '/api/mybooks',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        if(response.status === 401) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        if(response.status !== 200) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            return;\r\n        }\r\n        setMyBooks(response.data);\r\n\r\n    }, []);\r\n\r\n    /**\r\n     * Handler to navigate to the selected status page.\r\n     */\r\n    const handleNavigation = (event) => {\r\n        let type = event.currentTarget.getAttribute('type').trim();\r\n        type = encodeURI(type);\r\n        navigate(`${type}`, {state: myBooks[type]});\r\n    };\r\n\r\n    return (\r\n        <div className=\"MyBooks\">\r\n            {myBooks &&\r\n            <>\r\n\r\n                {\r\n                    USER_BOOK_STATUS_CONSTANTS_LIST && USER_BOOK_STATUS_CONSTANTS_LIST.length &&\r\n                    USER_BOOK_STATUS_CONSTANTS_LIST.map((value, idx) => {\r\n                        return  myBooks && myBooks[value] && myBooks[value].length ?\r\n                                (\r\n                                <div key={value + \" \" + idx}>\r\n                                    <div className=\"MyBooks-title-wrapper\">\r\n                                        <span className=\"MyBooks-title\">{value}</span>\r\n                                        {\r\n                                            myBooks[value] && myBooks[value].length > 10 ?\r\n                                                <span className=\"Mybooks-show-more\" type={value} onClick={handleNavigation}>Show more</span>\r\n                                            : null\r\n                                        }\r\n                                    </div>    \r\n                                    <div className={`MyBooks-type-section-wrapper ${value}`}>\r\n                                        <BooksTile books={myBooks[value]} \r\n                                            displayStarted={value === USER_BOOK_STATUS_CONSTANTS.CURRENTLY_READING ? true : false} \r\n                                            displayCompleted={value === USER_BOOK_STATUS_CONSTANTS.READ ? true : false}\r\n                                            displayTarget={value === USER_BOOK_STATUS_CONSTANTS.WANT_TO_READ ? true : false}\r\n                                            />\r\n                                    </div> \r\n                                </div>) : null\r\n                    })\r\n                }\r\n\r\n                {\r\n                    myBooks && myBooks['rated'] && myBooks['rated'].length ? \r\n                        ( <>\r\n                            <div className=\"MyBooks-title-wrapper\">\r\n                                <span className=\"MyBooks-title\">Rated</span>\r\n                                {\r\n                                    myBooks['rated'] && myBooks['rated'].length > 10 ?\r\n                                        <span className=\"Mybooks-show-more\" type={'rated'} onClick={handleNavigation}>Show more</span>\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                            <div className={`MyBooks-type-section-wrapper rated`}>\r\n                                <BooksTile books={myBooks['rated']} displayRating/>\r\n                            </div>\r\n                        </>) : null\r\n                }\r\n            </>\r\n            }\r\n            <div className=\"MyBooks-recommended-wrapper\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyBooks;","import React, { useState, useContext, useEffect } from 'react';\r\nimport './MyBookDetails.css';\r\nimport { useLocation } from 'react-router';\r\nimport USER_BOOK_STATUS_CONSTANTS from '../../utils/userBookStatusConstants';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport Rating from '@mui/material/Rating';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nconst COVER_PIC_URL_PREFIX = \"https://covers.openlibrary.org/b/id/\";\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/ImgNotAvailable.jpg\";\r\n\r\nconst MyBookDetails = (props) => {\r\n    const state = useLocation();console.log(state);\r\n    const type = decodeURI(state.pathname).split('/')?.pop();\r\n    const {user, setUser} = useContext(UserContext);\r\n    const [data, setData] = useState([]);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    let isValidPath = false;\r\n    const paginationCount = Math.ceil((data && data.length ? data.length : 0) / 10);\r\n    const [paginationIndex, setPaginationIndex] = useState(1);\r\n    const width = useContext(ScreenWidthContext);\r\n    const navigate = useNavigate();\r\n\r\n    //Verify whether the current route is valid.\r\n    if(type === 'rated') {\r\n        isValidPath = true;\r\n    }\r\n    else {\r\n        for(let key in USER_BOOK_STATUS_CONSTANTS) {\r\n            if(USER_BOOK_STATUS_CONSTANTS[key] === type) {\r\n                isValidPath = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to handle the change in pagination index.\r\n     */\r\n    const handlePaginationChange = (event, value) => {\r\n        setPaginationIndex(value);\r\n    };\r\n\r\n     /**\r\n     * This function redirects the user to the selected book page.\r\n     */\r\n    const bookSelected = (event) => {\r\n        const id = event.currentTarget.getAttribute(\"itemid\");\r\n        navigate(`/book/${id}`, {state: id});\r\n    };\r\n\r\n    /**\r\n     * Retrieve all the books of the current MyBooks type for the user.\r\n     */\r\n    useEffect(async () => {\r\n        const token = user?.token;\r\n        if(!token) {\r\n            raiseSnackbarMessage('Unable to Authenticate the User. Please login again', 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        //No need to make the API call if the path isn't valid.\r\n        if(!isValidPath) {\r\n            raiseSnackbarMessage('No results to display.', 'info');\r\n            return;\r\n        }\r\n\r\n        const response = await axios({\r\n            method: 'GET',\r\n            url: process.env.REACT_APP_SERVER_URL + '/api/mybooks/' + type,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        if(response.status === 401) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        if(response.status !== 200) {\r\n            raiseSnackbarMessage(response.data.message, 'error');\r\n            return;\r\n        }\r\n        console.log(response.data[type]);\r\n        setData(response.data[type]);\r\n    }, []);\r\n\r\n    const notValidPathJSX = (\r\n        <div className=\"BookResults-no-results\">\r\n            <p>No results to display.</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className='MyBooksDetails'>\r\n            {!isValidPath ? notValidPathJSX : \r\n                <div className=\"MyBooksDetails-results-wrapper\">\r\n                    {\r\n                        data && data.length && data.slice(10 * (paginationIndex - 1), 10 * paginationIndex).map(obj => (\r\n                            <div key={obj._id} coverid={obj.cover} itemID={obj._id} \r\n                                className={`MyBooksDetails-result-card ${width < 800 ? 'mobile' : width < 1000 ? 'tablet' : ''}`}>\r\n                                <Card sx={{ maxWidth: 345 }} itemID={obj._id} onClick={bookSelected}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt={ALT_IMAGE_PATH}\r\n                                        image={obj.cover ? COVER_PIC_URL_PREFIX + obj.cover + \"-M.jpg\" : ALT_IMAGE_PATH}\r\n                                    />\r\n                                    <div className=\"MyBooksDetails-result-card-details-wrapper\" title={obj?.name}>\r\n                                        <p>{obj?.name}</p>\r\n                                        {type === 'rated' ? \r\n                                            (obj && obj.rating ? \r\n                                                <Rating value={obj.rating} precision={0.5} readOnly/>\r\n                                                : null) \r\n                                        : null}\r\n\r\n                                        {\r\n                                            type === USER_BOOK_STATUS_CONSTANTS.CURRENTLY_READING ?\r\n                                            (obj && obj.startDate ? \r\n                                                <span className=\"BooksTile-name-wrapper-started\"> \r\n                                                    Started: <Moment date={obj.startDate} format=\"D MMM YYYY\" /> \r\n                                                </span>\r\n                                                : null\r\n                                                )\r\n                                            : null\r\n                                        }\r\n\r\n                                        {\r\n                                            type === USER_BOOK_STATUS_CONSTANTS.READ ?\r\n                                            (obj && obj.endDate ? \r\n                                                <span className=\"BooksTile-name-wrapper-completed\"> \r\n                                                    Completed: <Moment date={obj.endDate} format=\"D MMM YYYY\" /> \r\n                                                </span>\r\n                                                : null\r\n                                                )\r\n                                            : null\r\n                                        }\r\n\r\n                                        {\r\n                                            type === USER_BOOK_STATUS_CONSTANTS.WANT_TO_READ ?\r\n                                            (obj && obj.targetDate ? \r\n                                                <span className=\"BooksTile-name-wrapper-target\"> \r\n                                                    Target: <Moment date={obj.endDate} format=\"D MMM YYYY\" /> \r\n                                                </span>\r\n                                                : null\r\n                                                )\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                </Card>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            }\r\n\r\n            {isValidPath ? \r\n                <div className=\"MyBooksDetails-pagination-wrapper\">\r\n                    <Pagination count={paginationCount} page={paginationIndex} onChange={handlePaginationChange} \r\n                        variant=\"outlined\" color=\"primary\" />  \r\n                </div> \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyBookDetails;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport './MyReviews.css';\r\nimport axios from 'axios';\r\nimport { SnackbarContext } from '../../contexts/SnackbarContext';\r\nimport { useLocation } from 'react-router';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ScreenWidthContext } from \"../../contexts/ScreenWidthContext\";\r\n\r\nconst BOOK_THUMBNAIL_URL_PREFIX = \"https://covers.openlibrary.org/b/id/\";\r\nconst ALT_IMAGE_PATH = process.env.PUBLIC_URL + \"/ImgNotAvailable.jpg\";\r\n\r\nconst MyReviews = (props) => {\r\n    const {user, setUser} = useContext(UserContext);\r\n    const state = useLocation().state;\r\n    const [reviews, setReviews] = useState(null);\r\n    const width = useContext(ScreenWidthContext);\r\n    const {raiseSnackbarMessage} = useContext(SnackbarContext);\r\n    const paginationCount = Math.ceil((reviews && reviews.length ? reviews.length : 0) / 10);\r\n    const [paginationIndex, setPaginationIndex] = useState(1);\r\n    const navigate = useNavigate();\r\n\r\n    /**\r\n     * Set the reviews in the initial-run.\r\n     */\r\n    useEffect(async () => {\r\n        const token = user?.token;\r\n        if(!token) {\r\n            raiseSnackbarMessage('Unable to Authenticate the User. Please login again', 'error');\r\n            localStorage.setItem(\"betterreadsuserinfo\", null);\r\n            setUser(null);\r\n        }\r\n\r\n        if(state && state.reviews) {\r\n            setReviews(state.reviews);\r\n        }\r\n        else {//If the reviews hasn't been supplied from the props, make the corresponding API call to retrieve them. \r\n            const response = await axios({\r\n                method: 'GET',\r\n                url: process.env.REACT_APP_SERVER_URL + '/api/userActivity/userReviews',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            if(response.status === 401) {\r\n                raiseSnackbarMessage(response.data.message, 'error');\r\n                localStorage.setItem(\"betterreadsuserinfo\", null);\r\n                setUser(null);\r\n            }\r\n    \r\n            if(response.status !== 200) {\r\n                raiseSnackbarMessage(response.data.message, 'error');\r\n                return;\r\n            }\r\n            setReviews(response.data.reviews);\r\n        }\r\n    }, []);\r\n\r\n    /**\r\n     * Function to handle the change in pagination index.\r\n     */\r\n     const handlePaginationChange = (event, value) => {\r\n        setPaginationIndex(value);\r\n    };\r\n\r\n    /**\r\n     * Handler to navigate the user to the corresponding Book page.\r\n     */\r\n    const handleBookNavigation = (event) => {\r\n        const bookId = event.currentTarget.getAttribute(\"bookid\");\r\n        navigate(`/book/${bookId}`, {state: bookId});\r\n    };\r\n\r\n    return (\r\n        <div className={`MyReviews ${width < 1200 ? 'mobile1200' : null}`}>\r\n            {\r\n                reviews && reviews.length ?\r\n                reviews.slice(10 * (paginationIndex - 1), 10 * paginationIndex).map((review, idx) => \r\n                    <div className=\"MyReviews-row\" key={idx}>\r\n                        <div className=\"MyReviews-row-cover-wrapper\">\r\n                            <img src={review.cover ? BOOK_THUMBNAIL_URL_PREFIX + review.cover + \"-M.jpg\" : ALT_IMAGE_PATH} \r\n                                onClick={handleBookNavigation} bookid={review._id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"MyReviews-row-details-wrapper\">\r\n                            <div className=\"MyReviews-row-title-wrapper\">\r\n                                <p>{review.name}</p>\r\n                            </div>\r\n                            <div className=\"MyReviews-row-review-wrapper\">\r\n                                <p>{review.reviewContent}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                : null\r\n            }\r\n            {reviews && reviews.length ? \r\n                <div className=\"MyReviews-pagination-wrapper\">\r\n                    <Pagination count={paginationCount} page={paginationIndex} onChange={handlePaginationChange} \r\n                        variant=\"outlined\" color=\"primary\" />  \r\n                </div> \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyReviews;","import React, { useContext } from 'react';\r\nimport './Friends.css';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport CountdownClock from '../CountdownClock/CountdownClock';\r\n\r\nconst Friends = () => {\r\n    const width = useContext(ScreenWidthContext);\r\n    return (\r\n        <div className=\"Friends Home\"> \r\n            <div className={`Home-count-down-wrapper ${width < 1200 ? 'mobile1200' : null}`}>\r\n                <p>F.R.I.E.N.D.S feature development is in progress. Keep an eye out</p>\r\n                <CountdownClock targetDate={\"Dec 22, 2021 00:00:00\"} />\r\n            </div>\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default Friends;","import React, { useContext } from 'react';\r\nimport './Communities.css';\r\nimport { ScreenWidthContext } from '../../contexts/ScreenWidthContext';\r\nimport CountdownClock from '../CountdownClock/CountdownClock';\r\n\r\nconst Communities = () => {\r\n    const width = useContext(ScreenWidthContext);\r\n    return (\r\n        <div className=\"Communities Home\"> \r\n            <div className={`Home-count-down-wrapper ${width < 1200 ? 'mobile1200' : null}`}>\r\n                <p>Communities feature development is in progress. Keep an eye out</p>\r\n                <CountdownClock targetDate={\"Dec 22, 2021 00:00:00\"} />\r\n            </div>\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default Communities;","import React from 'react';\r\nimport './NotFound.css';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"NotFound\">\r\n            <p>The page you're looking for does not exist.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from \"./components/Home/Home\";\r\nimport NavSidebar from './components/NavSideBar/NavSideBar';\r\nimport Login from './components/Login/Login';\r\nimport { UserContext } from './contexts/UserContext';\r\nimport { SnackbarContext } from './contexts/SnackbarContext';\r\nimport { ScreenWidthContext } from './contexts/ScreenWidthContext';\r\nimport Profile from './components/Profile/Profile';\r\nimport SnackBar from './components/Snackbar/Snackbar';\r\nimport BookResults from './components/BookResults/BookResults';\r\nimport Book from './components/Book/Book';\r\nimport Author from './components/Author/Author';\r\nimport MyBooks from './components/MyBooks/MyBooks';\r\nimport MyBooksDetails from './components/MyBooksDetails/MyBooksDetails';\r\nimport MyReviews from './components/MyReviews/MyReviews';\r\nimport Friends from './components/Friends/Friends';\r\nimport Communities from './components/Communities/Communities';\r\nimport NotFound from './components/NotFound/NotFound';\r\n\r\nfunction App() {\r\n  const userObj = JSON.parse(localStorage.getItem(\"betterreadsuserinfo\"));\r\n  const [user, setUser] = useState(userObj);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [snackbarOpen, toggleSnackbar] = useState(false);\r\n  const snackbarObj = useRef(null);\r\n\r\n  /**\r\n   * Handler to invoke the snackbar with the message & severity provided.\r\n   */\r\n  const raiseSnackbarMessage = (message, severity) => {\r\n    snackbarObj.current = {}; \r\n    snackbarObj.current.severity = severity;\r\n    snackbarObj.current.message = message;\r\n    toggleSnackbar(true);\r\n  };\r\n\r\n  /**\r\n   * useEffect for initial-setup to add an event listener that tracks the current screen's width on resize.\r\n   */\r\n  useEffect(() => {\r\n    window.addEventListener('resize', () => {\r\n      setWidth(window.innerWidth);\r\n    });\r\n  }, []);\r\n\r\n  const appFlow = (\r\n    <>\r\n      <NavSidebar />\r\n      <div className={`App-body-wrapper ${width < 600 ? 'mobile' : ''}`}>\r\n        <Routes>\r\n            <Route path='/' element={<Home />} />\r\n            <Route path='/profile' element={<Profile />} />\r\n            <Route path='/bookresults' element={<BookResults />} />\r\n            <Route path='/book/:bookId' element={<Book />} />\r\n            <Route path='/author/:authorId' element={<Author />} />\r\n            <Route path='/mybooks' element={<MyBooks />} />\r\n            <Route path='/mybooks/:status' element={<MyBooksDetails />} />\r\n            <Route path=\"/myReviews\" element={<MyReviews />} />\r\n            <Route path=\"/friends\" element={<Friends />} />\r\n            <Route path=\"/communities\" element={<Communities />} />\r\n            <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </div>\r\n    </>\r\n  );\r\n  return (\r\n    <div className=\"App\">\r\n      <UserContext.Provider value={{user, setUser}}> \r\n        <SnackbarContext.Provider value={{snackbarOpen, toggleSnackbar, snackbarObj ,raiseSnackbarMessage}}>\r\n          <ScreenWidthContext.Provider value={width}> \r\n            {user ? appFlow : (<Login />)}\r\n          </ScreenWidthContext.Provider>\r\n          <SnackBar />\r\n        </SnackbarContext.Provider>\r\n      </UserContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n     <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}